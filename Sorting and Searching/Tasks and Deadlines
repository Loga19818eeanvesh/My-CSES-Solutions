//
//  main.cpp
//  Tasks and Deadlines
//
//  Created by Logas81855anvesh on 06/04/21.
//
 
#include <iostream>
 
using namespace std;
struct node{
    int a;
    int d;
};
 
void merge(node* p,int a,int c,int b){
    int l1=c-a+1;
    int r1=b-c;
    node l[l1+1];
    node r[r1+1];
    l[l1].a=1e9;
    r[r1].a=1e9;
    for(int i=0;i<l1;i++){
        l[i]=p[a+i];
    }
    for(int i=0;i<r1;i++){
        r[i]=p[c+1+i];
    }
    int li=0;
    int ri=0;
    for(int i=a;i<=b;i++){
        if(l[li].a<=r[ri].a){p[i]=l[li];li++;}
        else{p[i]=r[ri];ri++;}
    }
}
 
void merge_sort(node* p, int a, int b){
    if(a<b){
        int c=(a+b)/2;
        merge_sort(p, a, c);
        merge_sort(p, c+1, b);
        merge(p,a,c,b);
    }
}
 
int main( ) {
    int n;
    cin>>n;
    node p[n];
    for(int i=0;i<n;i++){
        cin>>p[i].a;
        cin>>p[i].d;
    }
    merge_sort(p,0,n-1);
    long long int f[n];
    f[0]=p[0].a;
    for(int i=1;i<n;i++){
        f[i]=(long long)p[i].a+f[i-1];
    }
    long long int r=0;
    for(int i=0;i<n;i++){
        r=r+((long long)p[i].d-f[i]);
    }
    cout<<r<<"\n";
    return 0;
}
