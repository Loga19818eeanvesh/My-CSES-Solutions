
 
#include <iostream>
 
using namespace std;
struct node{
    int s;
    int f;
};
 
void merge(node* p,int a,int c,int b){
    int l1=c-a+1;
    int r1=b-c;
    node l[l1+1];
    node r[r1+1];
    l[l1].f=1000000001;
    r[r1].f=1000000001;
    for(int i=0;i<l1;i++){l[i]=p[a+i];}
    for(int i=0;i<r1;i++){r[i]=p[c+1+i];}
    int li=0;
    int ri=0;
    for(int i=a;i<=b;i++){
        if(l[li].f<=r[ri].f){p[i]=l[li];li++;}
        else{p[i]=r[ri];ri++;}
    }
}
 
void merge_sort(node* p,int a,int b){
    if(a<b){
        int c=(a+b)/2;
        merge_sort(p, a, c);
        merge_sort(p, c+1, b);
        merge(p,a,c,b);
    }
}
 
int main( ) {
    int n;
    cin>>n;
    node p[n];
    for(int i=0;i<n;i++){
        cin>>p[i].s;
        cin>>p[i].f;
    }
    merge_sort(p, 0, n-1);
    int r=1;
    int in=0;
    for(int i=1;i<n;i++){
        if(p[i].s>=p[in].f){r++;in=i;}
    }
    cout<<r<<endl;
    return 0;
}
