//
//  main.cpp
//  all_possible_paths
//
//  Created by Logas81855anvesh on 11/02/21.
//
 
#include <iostream>
#include <vector>
using namespace std;
class graph{
private:
    vector<int> v;
    vector<vector<int>> e;
    vector<vector<int>> p;
    unsigned long long r;
    vector<unsigned long long> d;
    vector<char> c;
public:
    void addvertex(int i){
        v.push_back(i);
    }
    void initialise(){
        e.resize(v.size());
    }
    void addedges(int a,int b){
        e[a-1].push_back(b-1);
    }
    unsigned long long visit(int i){
        if(i==0){return(1);}
        else if(c[i]=='1'){return(d[i]);}
        else{
            unsigned long long ret=0;
            for(int j=0;j<p[i].size();j++){
               ret=ret+visit(p[i][j]);
                if(ret>1000000007){ret=ret-1000000007;}
            }
            c[i]='1';
            d[i]=ret;
            return ret;
        }
    }
    void allpaths(){
        r=0;
        c.resize(v.size());
        p.resize(v.size());
        d.resize(v.size());
        for(int i=0;i<v.size();i++){
            for(int j=0;j<e[i].size();j++){
                p[e[i][j]].push_back(i);
            }
            d[i]=0;
            c[i]='0';
        }
        r=visit(v.size()-1);
        cout<<(r%(1000000007))<<endl;
    }
};
 
int main( ) {
    int n;
    int m;
    cin>>n;
    cin>>m;
    graph g;
    for(int i=1;i<=n;i++){
        g.addvertex(i);
    }
    int a;
    int b;
    g.initialise();
    for(int i=0;i<m;i++){
        cin>>a;
        cin>>b;
        g.addedges(a, b);
    }
    g.allpaths();
    return 0;
}
