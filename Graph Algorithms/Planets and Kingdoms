//
//  main.cpp
//  planets_and_kingdoms
//
//  Created by Logas81855anvesh on 14/02/21.
//
 
#include <iostream>
#include <vector>
using namespace std;
class graph{
private:
    vector<int> v;
    vector<vector<int>> e;
    vector<vector<int>> e1;
    vector<int> t;
    vector<int> r;
public:
    void addvertex(int i){
        v.push_back(i);
    }
    void initialise(){
        e.resize(v.size());
        e1.resize(v.size());
    }
    void addedges(int a,int b){
        e[a-1].push_back(b-1);
        e1[b-1].push_back(a-1);
    }
    void dfs_visit(char* c,int i){
        for(int j=0;j<e[i].size();j++){
            if(c[e[i][j]]=='w'){
                c[e[i][j]]='g';
                dfs_visit(c, e[i][j]);
            }
        }
        t.push_back(i);
    }
    void dfs_visit1(char* c,int i,int r1){
        for(int j=0;j<e1[i].size();j++){
            if(c[e1[i][j]]=='w'){
                c[e1[i][j]]='g';
                r[e1[i][j]]=r1;
                dfs_visit1(c, e1[i][j], r1);
            }
        }
    }
    void dfs(){
        char c[v.size()];
        for(int i=0;i<v.size();i++){
            c[i]='w';
        }
        for(int i=0;i<v.size();i++){
            if(c[i]=='w'){
                c[i]='g';
                dfs_visit(c,i);
            }
        }
        r.resize(v.size());
        char c1[v.size()];
        for(int i=0;i<v.size();i++){
            c1[i]='w';
        }
        int r1=0;
        for(int i=v.size()-1;i>=0;i--){
            int in=t[i];
            if(c1[in]=='w'){
                r1++;
                r[in]=r1;
                c1[in]='g';
                dfs_visit1(c1,in,r1);
            }
        }
        cout<<r1<<endl;
        for(int i=0;i<v.size();i++){
            cout<<r[i]<<" ";
        }
        cout<<endl;
    }
};
 
int main( ) {
    int n;
    int m;
    cin>>n;
    cin>>m;
    graph g;
    for(int i=1;i<=n;i++){
        g.addvertex(i);
    }
    g.initialise();
    int a;
    int b;
    for(int i=0;i<m;i++){
        cin>>a;
        cin>>b;
        g.addedges(a, b);
    }
    g.dfs();
    return 0;
}
